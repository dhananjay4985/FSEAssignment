<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
 xmlns:mvc="http://www.springframework.org/schema/mvc"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 xmlns:beans="http://www.springframework.org/schema/beans"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:tx="http://www.springframework.org/schema/tx"
 xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
 xsi:schemaLocation=
 				"http://www.springframework.org/schema/mvc 
 				 http://www.springframework.org/schema/mvc/spring-mvc.xsd
  				 http://www.springframework.org/schema/beans 
  				 http://www.springframework.org/schema/beans/spring-beans.xsd
 				 http://www.springframework.org/schema/data/jpa 
 				 http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
  				 http://www.springframework.org/schema/context 
  				 http://www.springframework.org/schema/context/spring-context.xsd
  				 http://www.springframework.org/schema/tx 
  				 http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
										
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	
	<context:component-scan base-package = "com.library" />
	
	<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
		
	<!-- to get DB properties -->
	<context:property-placeholder location = "classpath:application.properties"/>
	
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	
	<mvc:resources location="/resources/**" mapping="/resources/"></mvc:resources>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean	class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Transaction -->	
	<beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    	<beans:property name="entityManagerFactory" ref="entityManagerFactory" />
 	</beans:bean>
	
	<jpa:repositories base-package="com.library.main.repository" />	
	
	 <beans:bean id="entityManagerFactory"	class = "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
  		<beans:property name = "dataSource"    ref = "dataSource"></beans:property>
  		<beans:property name = "packagesToScan" value = "com.library.main.model" ></beans:property>
  		<beans:property name="jpaVendorAdapter">
   			<beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
    			<beans:property name = "generateDdl" value = "true"></beans:property>
    			<beans:property name = "databasePlatform" value = "${hibernate.dialect}"></beans:property>
    			<beans:property name = "database" value = "MYSQL"></beans:property>
  			 </beans:bean>
  		</beans:property>
 	</beans:bean>
	
	<!-- DataSource properties -->
	<beans:bean id = "dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name = "driverClassName" value = "${jdbc.driverClassName}"></beans:property>
		<beans:property name = "url"             value = "${jdbc.url}"></beans:property>
		<beans:property name = "username"        value = "${jdbc.username}"></beans:property>
		<beans:property name = "password"        value = "${jdbc.password}"></beans:property>
	</beans:bean>

</beans:beans>